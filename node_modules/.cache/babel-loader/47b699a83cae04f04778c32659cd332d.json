{"ast":null,"code":"import _slicedToArray from \"/Users/nataschahof/Desktop/Bootcamp/Teamprojects/Pokedex.GROUP/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/nataschahof/Desktop/Bootcamp/Teamprojects/Pokedex.GROUP/src/components/Stats.js\";\n\nimport React, { useState, useEffect } from \"react\";\nimport \"./../css/Stats.css\";\n\nvar Stats = function Stats() {\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      statsArray = _useState2[0],\n      setStatsArray = _useState2[1];\n\n  var testURL = \"https://pokeapi.co/api/v2/pokemon/1\";\n  fetch(testURL).then(function (response) {\n    return response.json();\n  }).then(function (data) {\n    setStatsArray(data.stats);\n  }).catch(function (error) {\n    console.log(error);\n  });\n  console.log(statsArray);\n  console.log(statsArray[1]);\n  /* console.log(statsArray[1].base_stat);\n  console.log(statsArray[1].stat.name); */\n\n  /*  const displayStats = () => {\n    let stats = [];\n    for (let key in statsArray) {\n      let bst = key.base_stat;\n      let statName = key.stat.name;\n      stats.push(\n        <div key={key}>\n          Stat: {statName}, BST: {bst}\n        </div>\n         //if statName === \"HP\" Display Symbol\n        // Inlinesystle for div using `$bst %`\n      );\n    }\n    return stats;\n  }; */\n  //HP (Hit Points)\n  //Attack (while physical move)\n  //Defense (damage by physical move\n  //Special (Special Attack and special Defense by special move))\n  //Speed (Acting first during battle)\n  //Accuracy (Chance for attack to hit - beginning 100%)\n  //Evasion (Chance for move missing) - beginning 0%\n  // from 0 to 255\n  //BST = Basestat\n  //actual stats at different level\n  //Evolution\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }\n  }, \"Test\"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default Stats;","map":{"version":3,"sources":["/Users/nataschahof/Desktop/Bootcamp/Teamprojects/Pokedex.GROUP/src/components/Stats.js"],"names":["React","useState","useEffect","Stats","statsArray","setStatsArray","testURL","fetch","then","response","json","data","stats","catch","error","console","log"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAO,oBAAP;;AAEA,IAAMC,KAAK,GAAG,SAARA,KAAQ,GAAM;AAAA,kBACkBF,QAAQ,CAAC,EAAD,CAD1B;AAAA;AAAA,MACXG,UADW;AAAA,MACCC,aADD;;AAGlB,MAAMC,OAAO,GAAG,qCAAhB;AAEAC,EAAAA,KAAK,CAACD,OAAD,CAAL,CACGE,IADH,CACQ,UAACC,QAAD;AAAA,WAAcA,QAAQ,CAACC,IAAT,EAAd;AAAA,GADR,EAEGF,IAFH,CAEQ,UAACG,IAAD,EAAU;AACdN,IAAAA,aAAa,CAACM,IAAI,CAACC,KAAN,CAAb;AACD,GAJH,EAKGC,KALH,CAKS,UAACC,KAAD,EAAW;AAChBC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACD,GAPH;AASAC,EAAAA,OAAO,CAACC,GAAR,CAAYZ,UAAZ;AACAW,EAAAA,OAAO,CAACC,GAAR,CAAYZ,UAAU,CAAC,CAAD,CAAtB;AACA;;;AAGA;;;;;;;;;;;;;;;AAiBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;;AAEA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAWE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAXF,CADF;AAeD,CAjED;;AAmEA,eAAeD,KAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport \"./../css/Stats.css\";\n\nconst Stats = () => {\n  const [statsArray, setStatsArray] = useState([]);\n\n  const testURL = \"https://pokeapi.co/api/v2/pokemon/1\";\n\n  fetch(testURL)\n    .then((response) => response.json())\n    .then((data) => {\n      setStatsArray(data.stats);\n    })\n    .catch((error) => {\n      console.log(error);\n    });\n\n  console.log(statsArray);\n  console.log(statsArray[1]);\n  /* console.log(statsArray[1].base_stat);\n  console.log(statsArray[1].stat.name); */\n\n  /*  const displayStats = () => {\n    let stats = [];\n    for (let key in statsArray) {\n      let bst = key.base_stat;\n      let statName = key.stat.name;\n      stats.push(\n        <div key={key}>\n          Stat: {statName}, BST: {bst}\n        </div>\n\n        //if statName === \"HP\" Display Symbol\n        // Inlinesystle for div using `$bst %`\n      );\n    }\n    return stats;\n  }; */\n\n  //HP (Hit Points)\n  //Attack (while physical move)\n  //Defense (damage by physical move\n  //Special (Special Attack and special Defense by special move))\n  //Speed (Acting first during battle)\n  //Accuracy (Chance for attack to hit - beginning 100%)\n  //Evasion (Chance for move missing) - beginning 0%\n  // from 0 to 255\n  //BST = Basestat\n\n  //actual stats at different level\n\n  //Evolution\n\n  return (\n    <div>\n      <h1>Test</h1>\n      {/*  <div className=\"meter red\">\n        <span style={{ width: \"50%\" }}></span>\n      </div>\n      <div className=\"meter orange\">\n        <span style={{ width: \"20%\" }}></span>\n      </div>\n      <div className=\"meter\">\n        <span style={{ width: \"10%\" }}></span>\n      </div> */}\n      <div>{/* {displayStats()} */}</div>\n    </div>\n  );\n};\n\nexport default Stats;\n"]},"metadata":{},"sourceType":"module"}